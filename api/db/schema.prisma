generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model captions {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  history    Json[]    @default([])
  audio_id   String?   @db.Uuid
  language   String?
  content    Json[]    @default([])
  status     String?   @default("queued")
  audio      audio?    @relation(fields: [audio_id], references: [id], onDelete: SetDefault, onUpdate: NoAction)
}

model queue {
  id               BigInt    @id @default(autoincrement())
  created_at       DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  status           String    @default("queued")
  history          Json[]    @default([])
  video_id         String?
  desired_language String    @default("en")
  videos           videos?   @relation(fields: [video_id], references: [id], onDelete: SetDefault, onUpdate: NoAction)
}

model audio {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  history    Json[]     @default([])
  video_id   String?
  language   String     @default("undefined")
  file_path  String?
  videos     videos?    @relation(fields: [video_id], references: [id], onDelete: SetDefault, onUpdate: NoAction)
  captions   captions[]
}

model videos {
  id               String    @id
  created_at       DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  default_language String?
  history          Json[]    @default([])
  audio            audio[]
  queue            queue[]
}
